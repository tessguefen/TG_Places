<MvFUNCTION NAME = "JSON_TGPlaces_Load_Query" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "g.Filter" VALUE = "{ trim( g.Filter ) }">
	<MvASSIGN NAME = "g.Sort" VALUE = "{ trim( g.Sort ) }">
	<MvASSIGN NAME = "g.Offset" VALUE = "{ trim( g.Offset ) }">
	<MvASSIGN NAME = "g.Count" VALUE = "{ trim( g.Count ) }">
	<MvASSIGN NAME = "l.search_query" VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query,'s.*' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'TG_Places', 's' ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter( l.search_query, g.Filter,'place_id:s.place_id,name:s.name,formatted_address:s.formatted_address,geometry:s.geometry,type:s.type,active:s.active,last_updated:s.last_updated' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_OrderBy_Fields(l.search_query, g.Sort, 'place_id:s.place_id,name:s.name,formatted_address:s.formatted_address,geometry:s.geometry,type:s.type,active:s.active,last_updated:s.last_updated', 's.place_id' ) }">

	<MvASSIGN NAME = "l.search_sql" VALUE = "{ [ g.Module_Library_DB].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.search_query, l.total_count ) }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGPLACES">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error(g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range('Merchant', 'TGPLACES', l.search_sql, l.search_fields, g.Offset, g.Count) }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGPLACES">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'TGPLACES-FUNC-1001',g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.count" VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
		{
			"data":
				[
					<MvWHILE EXPR = "{ ( NOT TGPLACES.d.EOF ) AND ( ( g.Count EQ 0 ) OR (l.count LT g.Count ) ) }">
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.count )}">
					"id" : <MvEVAL EXPR = "{ int( TGPLACES.d.id ) }">,
					"place_id" : "<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( TGPLACES.d.place_id ) }">",
					"name" : "<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( TGPLACES.d.name ) }">",
					"formatted_address" : "<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( TGPLACES.d.formatted_address ) }">",
					"geometry" : "<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( TGPLACES.d.geometry ) }">",
					"last_updated" : <MvEVAL EXPR = "{ int( TGPLACES.d.last_updated) }">,
					"type" : "<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( TGPLACES.d.type ) }">",
					"active" : <MvEVAL EXPR = "{ int( TGPLACES.d.active ) }">
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
					<MvSKIP NAME = "Merchant" VIEW = "TGPLACES" ROWS = 1>
					</MvWHILE>
				],

			"total_count": <MvEVAL EXPR = "{ int( l.total_count ) }">,
			"start_offset": <MvEVAL EXPR = "{ int( g.Offset ) }">
		}
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGPLACES">
	}
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Place_Insert" PARAMETERS = "place_id, name, formatted_address, geometry, type, PlaceActive" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ Place_Insert( l.place_id, l.name, l.formatted_address, l.geometry, l.type, l.PlaceActive, l.errors ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
	</MvIF>
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( l.errors:json_code, l.errors:message ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Place_Insert" PARAMETERS = "place_id, name, formatted_address, geometry, type, active, errors var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.place_id" VALUE = "{ trim( l.place_id ) }">

	<MvIF EXPR = "{ ISNULL l.place_id }">
		<MvASSIGN NAME = "l.errors:json_code" VALUE = "{ 'place_id' }">
		<MvASSIGN NAME = "l.errors:message" VALUE = "{ 'Place ID can not be empty' }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ Load_Place( l.place_id, l.place ) }">
		<MvASSIGN NAME = "l.errors:json_code" VALUE = "place_id">
		<MvASSIGN NAME = "l.errors:message" VALUE = "{ 'This place ID already exists.' }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT Google_Places_Get_Place( l.place_id, l.place, l.errors ) }">
		<MvASSIGN NAME = "l.errors:json_code" VALUE = "place_id">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.place:geometry" VALUE = "{ miva_array_serialize( l.place:geometry ) }">

	<MvASSIGN NAME = "l.id" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'TGPlaces' ) }">

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'TG_Places
						  ( id, place_id, name, formatted_address, geometry, type, active, last_updated )
						  VALUES
						  ( ?, ?, ?, ?, ?, ?, ?, ?)' }"
			 FIELDS = "l.id, l.place_id, l.place:name, l.place:formatted_address, l.place:geometry, l.type, l.active, s.dyn_time_t">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvASSIGN NAME = "l.errors:json_code" VALUE = "place_id">
		<MvASSIGN NAME = "l.errors:message" VALUE = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGPLACES-FUNC-1002:', g.MvQUERY_Error ) }">
	</MvIF>
	<MvFUNCTIONRETURN VALUE = 1 />
</MvFUNCTION>

<MVFUNCTION NAME = "JSON_Place_Update" PARAMETERS = "place_id, name, formatted_address, geometry, type, PlaceActive" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ Place_Update( l.place_id, l.name, l.formatted_address, l.geometry, l.type, l.PlaceActive, l.errors ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
	</MvIF>
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( l.errors:json_code, l.errors:message ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Place_Update" PARAMETERS = "place_id, name, formatted_address, geometry, type, active, errors var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.place_id" VALUE = "{ trim( l.place_id ) }">

	<MvIF EXPR = "{ ISNULL l.place_id }">
		<MvASSIGN NAME = "l.errors:json_code" VALUE = "{ 'place_id' }">
		<MvASSIGN NAME = "l.errors:message" VALUE = "{ 'Place ID can not be empty' }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT Load_Place( l.place_id, l.place ) }">
		<MvASSIGN NAME = "l.errors:json_code" VALUE = "place_id">
		<MvASSIGN NAME = "l.errors:message" VALUE = "{ 'This place ID does not exists.' }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'TG_Places
			 				SET
				 				name = ?,
				 				formatted_address = ?,
				 				geometry = ?,
				 				type = ?,
				 				active = ?,
				 				last_updated = ?
						  WHERE
						  	place_id = ?' }"
			 FIELDS = "l.name, l.formatted_address, l.geometry, l.type, l.active, s.dyn_time_t, l.place_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvASSIGN NAME = "l.errors:json_code" VALUE = "place_id">
		<MvASSIGN NAME = "l.errors:message" VALUE = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGPLACES-FUNC-1007:', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1 />
</MvFUNCTION>

<MvFUNCTION NAME = "Load_Place" PARAMETERS = "place_id, place var" STANDARDOUTPUTLEVEL = "compresswhitespace" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.place_id" VALUE = "{ trim( l.place_id ) }">
	<MvIF EXPR = "{ ISNULL l.place_id }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "TGPLACES"
				QUERY 	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TG_Places WHERE place_id = ?' }"
				FIELDS 	= "l.place_id">

	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGPLACES">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGPLACES-FUNC-1003:', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ TGPLACES.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGPLACES">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'TGPLACES-FUNC-1004' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.place"	MEMBER = "place_id"				VALUE = "{ TGPLACES.d.place_id }">
	<MvASSIGN NAME = "l.place"	MEMBER = "name"					VALUE = "{ TGPLACES.d.name }">
	<MvASSIGN NAME = "l.place"	MEMBER = "formatted_address"	VALUE = "{ TGPLACES.d.formatted_address }">
	<MvASSIGN NAME = "l.place"	MEMBER = "geometry"				VALUE = "{ TGPLACES.d.geometry }">
	<MvASSIGN NAME = "l.place"	MEMBER = "type"					VALUE = "{ TGPLACES.d.type }">
	<MvASSIGN NAME = "l.place"	MEMBER = "active"				VALUE = "{ TGPLACES.d.active }">
	<MvASSIGN NAME = "l.place"	MEMBER = "last_updated"			VALUE = "{ TGPLACES.d.last_updated }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGPLACES">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Place_Active" PARAMETERS = "place_id, active" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT Place_Active( l.place_id, l.active ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'active', g.MvQUERY_Error ) }">
	</MvIF>
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "Place_Active" PARAMETERS = "place_id, active" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.place_id" VALUE = "{ trim( l.place_id ) }">
	<MvASSIGN NAME = "l.active" VALUE = "{ trim( l.active ) }">

	<MvIF EXPR = "{ NOT Load_Place( l.place_id, l.place ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.active NE 1 }">
		<MvASSIGN NAME = "l.active" VALUE = "0">
	</MvIF>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'TG_Places
							SET
								active = ?
							WHERE
								place_id = ?' }"
			 FIELDS = "l.active, l.place_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGPLACES-FUNC-1005', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Place_Delete" PARAMETERS = "place_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT Place_Delete( l.place_id ) }">	
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'place_id', g.MvQUERY_Error ) }">
	</MvIF>
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "Place_Delete" PARAMETERS = "place_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.place_id" VALUE = "{ trim( l.place_id ) }">

	<MvIF EXPR = "{ ISNULL l.place_id }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvQUERY NAME 	= "Merchant"
			 QUERY 	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'TG_Places WHERE place_id = ?' }"
			 FIELDS = "l.place_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGPLACES-FUNC-1006', g.MvQUERY_Error ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Google_Places_Get_Place" PARAMETERS = "place_id, place var, errors var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.place_id" VALUE = "{ trim( l.place_id ) }">

	<MvIF EXPR = "{ ISNULL l.place_id }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.key" VALUE = "AIzaSyBK3hTzmMvx2oEGVMEOWiEcByTJUKsAees">

	<MvCALL ACTION = "{ 'https://maps.googleapis.com/maps/api/place/details/json?placeid=' $ l.place_id $ '&key=' $ l.key }" METHOD = "GET">
		<MvASSIGN NAME = "l.maps_response" VALUE = "{ l.maps_response $ s.callvalue }">
	</MvCALL>

	<MvASSIGN NAME = "l.success" VALUE = "{ miva_json_decode( l.maps_response, l.place_info ) }">

	<MvIF EXPR = "{ l.place_info:status NE 'OK' }">
		<MvASSIGN NAME = "l.errors:message" VALUE = "{ l.place_info:status }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT l.place_info:result:name }">
		<MvASSIGN NAME = "l.errors:message" VALUE = "'## ERROR ##'">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.place" MEMBER = "name" 				VALUE = "{ l.place_info:result:name }">
	<MvASSIGN NAME = "l.place" MEMBER = "formatted_address" VALUE = "{ l.place_info:result:formatted_address }">
	<MvASSIGN NAME = "l.place" MEMBER = "geometry" 			VALUE = "{ l.place_info:result:geometry }">
	<MvASSIGN NAME = "l.place" MEMBER = "id"				VALUE = "{ l.place_id }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "TGPlace_JSON_Output" PARAMETERS = "value var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvASSIGN NAME = "l.member_count"	VALUE = "{ miva_struct_members( l.value, l.members ) }">
	<MvIF EXPR = "{ l.member_count GT 0 }">
		{
			<MvFOREACH INDEX = "l.pos" ITERATOR = "l.member" ARRAY = "l.members" COUNT = "{ l.member_count }">
				<MvIF EXPR = "{ l.pos GT 1 }">
					,
				</MvIF>

				<MvREFERENCEARRAY NAME = "l.member_value" VARIABLE = "l.value">
					<MvMEMBER NAME = "{ l.member }">
				</MvREFERENCEARRAY>

				"<MvEVAL EXPR = "{ encodejavascriptstring( l.member ) }">": <MvEVAL EXPR = "{ TGPlace_JSON_Output( l.member_value ) }">
			</MvFOREACH>
		}

		<MvFUNCTIONRETURN>
	</MvIF>

	<MvASSIGN NAME = "l.element_count"	VALUE = "{ miva_array_elements( l.value ) }">
	<MvIF EXPR = "{ l.element_count GT 0 }">
		[
		<MvFOREACH INDEX = "l.pos" ITERATOR = "l.element" ARRAY = "l.value" COUNT = "{ l.element_count }">
			<MvIF EXPR = "{ l.pos GT 1 }">
				,
			</MvIF>

			<MvEVAL EXPR = "{ TGPlace_JSON_Output( l.element ) }">
		</MvFOREACH>
		]

		<MvFUNCTIONRETURN>
	</MvIF>

	<MvASSIGN NAME = "l.value_nodec" VALUE = "{ gettoken( l.value, '.', 1 ) }">
	<MvASSIGN NAME = "l.value_negative" VALUE = "{ l.value_nodec * -1 }">

	<MvIF EXPR = "{ ( isdigit( l.value ) OR isdigit( l.value_nodec ) OR isdigit( l.value_negative) ) AND
					NOT ISNULL l.value	AND
					NOT ( len_var( l.value ) GE 2 AND substring_var( l.value, 1, 1 ) EQ '0' ) }">
		<MvEVAL EXPR = "{ l.value }">
	<MvELSE>
		"<MvEVAL EXPR = "{ encodejavascriptstring( l.value ) }">"
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Rebuild_File" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT Rebuild_Places_File() }">	
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( '', 'Error rebuilding the file.' ) }">
	</MvIF>
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "Rebuild_Places_File" ERROROUTPUTLEVEL = "" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.file_path" VALUE = "{ g.domain:mod_root $ 'js/places.js' }">

	<MvIF EXPR = "{ NOT Places_JSON_Contents( l.file_contents ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ sexists( l.file_path ) }">
		<MvASSIGN NAME = "l.delete" VALUE = "{ sdelete( l.file_path ) }">
	</MvIF>

	<MvASSIGN NAME = "l.create" VALUE = "{ file_create( l.file_path, 'script', l.file_contents ) }">

	<MvASSIGN NAME = "l.file_perms" VALUE = "{ fchmod( l.file_path, '0755' ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Places_JSON_Contents" PARAMETERS = "file_contents var" STANDARDOUTPUTLEVEL = "compresswhitespace" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "TGPLACES"
				QUERY 	= "{ 'SELECT place_id, name, formatted_address, geometry FROM ' $ g.Store_Table_Prefix $ 'TG_Places WHERE active = 1' }">

	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGPLACES">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGPLACES-FUNC-1003:', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ TGPLACES.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGPLACES">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'TGPLACES-FUNC-1004' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.count" VALUE = "1">

	<MvWHILE EXPR = "{ NOT TGPLACES.d.EOF }">
		<MvASSIGN NAME = "l.places"	INDEX ="{ l.count }"	MEMBER = "place_id"				VALUE = "{ TGPLACES.d.place_id }">
		<MvASSIGN NAME = "l.places"	INDEX ="{ l.count }"	MEMBER = "name"					VALUE = "{ TGPLACES.d.name }">
		<MvASSIGN NAME = "l.places"	INDEX ="{ l.count }"	MEMBER = "formatted_address"	VALUE = "{ TGPLACES.d.formatted_address }">
		<MvASSIGN NAME = "l.places"	INDEX ="{ l.count }"	MEMBER = "geometry"				VALUE = "{ miva_array_deserialize( TGPLACES.d.geometry ) }">
		<MvASSIGN NAME = "l.count" VALUE = "{ l.count + 1 }">
		<MvSKIP NAME = "Merchant" VIEW = "TGPLACES" ROWS = 1>
	</MvWHILE>
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGPLACES">

	<MvCAPTURE VARIABLE = "l.file_contents">
		<MvEVAL EXPR = "{ TGPlace_JSON_Output( l.places ) }">
	</MvCAPTURE>

	<MvASSIGN NAME = "l.file_contents" VALUE = "{ 'var places =' $ l.file_contents $ ';' }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>